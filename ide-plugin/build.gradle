import groovy.xml.*

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.9'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
}

group 'org.jetbrains.completion.full.line'
if (project.hasProperty("teamcity"))
    version = "0.1." + teamcity['build.number']
else
    version = '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/snapshots" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.41"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

patchPluginXml {
    sinceBuild '201.4163'
    untilBuild project.properties["ideaVersion"]

    changeNotes """
        0.0.4 <br>
        <ul>
            <li>Add Template-like string walking</li>
            <li>Start removing overwriting chars</li>
            <li>Add options for strings walking, enabling comments, completing only full lines</li>
            <li>Adjust missing braces</li>
        </ul>
        0.0.3 <br>
        <ul>
            <li>Add Settings for better UX. Settings -> Editor -> General -> Code Completion -> Server ML Completion</li>
            <li>Add option to get extra settings for Beam Search</li>
        </ul>
        0.0.2 <br>
        <ul>
            <li>Create auto-generated root public.xml for downloading plugin</li>
            <li>Make plugin compatible with all intellij-based IDE's</li>
            <li>Move build since 193 until 201</li>
            <li>Publish plugin with TeamCity</li>
        </ul>
        0.0.1 <br>
        <ul>
            <li>Simple Full Line Code Completion with ML Server</li>
            <li>Completing full line with <code>Enter</code></li>
            <li>Completing only one token with <code>Tab</code></li>
        </ul>
        """
}

task generatePublicXML {
    doLast {
        file("plugin.xml").withWriter { writer ->
            def xml = new MarkupBuilder(new IndentPrinter(writer, "    ", true))

            xml.doubleQuotes = true
            xml.mkp.xmlDeclaration(version: '1.0', encoding: 'UTF-8')

            // Leave file comment
            xml.mkp.comment("AUTO-GENERATED FILE. DO NOT MODIFY. " +
                    "plugin.xml is generated by generatePublicXML gradle task")
            xml.mkp.yield('\n')

            //Generated plugin.xml data
            xml.plugins {
                plugin {
                    name("Full Line Code Completion")
                    id("org.jetbrains.completion.full.line")
                    xml.version(version)
                    'idea-version'("since-build": "201", "until-build": project.properties["ideaVersion"])
                    vendor('url': 'https://www.jetbrains.com', "JetBrains")
                    'download-url'(buildPlugin.archiveFileName.get())
                    xml.description {
                        mkp.yieldUnescaped('<![CDATA[\n' +
                                '           <p>A prototype for showing full line code completion variants in IntelliJ</p>\n' +
                                '    ]]>')
                    }
                    depends("com.intellij.modules.lang")
                    depends("com.intellij.modules.python")
                }
            }
        }
    }
}

def branchParameter() {
    "?branch=refs/heads/${gitBranch()}"
}

def gitBranch() {
    def branch = ""
    def proc = "git --git-dir ${project.projectDir.toString()}/../.git rev-parse  --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.waitFor()
    branch
}

intellij {
    version project.properties["ideaVersion"] + '-EAP-SNAPSHOT'
    plugins "PythonCore:" + project.properties["ideaVersion"]
}

runIde {
    jvmArgs '-Xmx1G'
}

test {
    useJUnitPlatform()
}
